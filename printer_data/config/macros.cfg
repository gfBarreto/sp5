[gcode_macro ENGRAXAR_EIXO_Z]
description: "Desce e sobe o eixo Z 3 vezes para lubrifica√ß√£o"
gcode:
    M117 Engraxando eixo Z...

    G90                            ; Usa coordenadas absolutas
    G1 X150 Y150 F6000             ; Vai para o centro da mesa (ajuste conforme necess√°rio)

    {% set z_baixo = 326 %}
    {% set z_cima = 5 %}
    {% set repeticoes = 3 %}

    {% for i in range(repeticoes) %}
      {% set msg = '"Ciclo %d de %d"' % (i+1, repeticoes) %}
      M117 {msg}
      G1 Z{z_baixo} F1000
      G1 Z{z_cima} F1000
    {% endfor %}

    M117 Engraxamento finalizado

[gcode_macro Teste_Aceleracao]
description: Teste XY com aquecimento da mesa e bico, LED por velocidade e verifica√ß√£o
gcode:
    G90
    #M117 Aquecendo mesa e bico...
    #M140 S80           ; Define temperatura da mesa
    #M104 S155          ; Define temperatura do bico
    #M190 S80           ; Aguarda mesa aquecer
    #M109 S155          ; Aguarda bico aquecer

    G28
    #Z_TILT_ADJUST
    G1 Z10 F3000

    {% set velocidades = [100, 200, 300, 400] %}
    {% set cores = {
        100: (0.0, 0.0, 1.0),   # Azul
        200: (0.0, 1.0, 0.0),   # Verde
        300: (1.0, 1.0, 0.0),   # Amarelo
        400: (1.0, 0.0, 0.0)    # Vermelho
    } %}
    {% set pos_ext = [(10, 10), (270, 10), (270, 270), (10, 270)] %}
    {% set pos_int = [(0, 0), (100, 0), (100, 100), (0, 100)] %}
    {% set offsets = [
        (10, 10),
        (160, 10),
        (160, 160),
        (10, 160)
    ] %}
    {% set rep = params.REPETICOES|default(1)|int %}

    {% for vel in velocidades %}
      {% set cor = cores[vel] %}
      SET_LED LED=leds RED={cor[0]} GREEN={cor[1]} BLUE={cor[2]}
      {% set msg = '"Testando a %d mm/s"' % vel %}
      RESPOND PREFIX="TEST_ACCEL_XY" MSG={msg}
      M117 {msg}

      {% if vel == 400 %}
        SET_VELOCITY_LIMIT VELOCITY={vel} ACCEL=5000 SQUARE_CORNER_VELOCITY=5
      {% else %}
        SET_VELOCITY_LIMIT VELOCITY={vel} ACCEL=3000 SQUARE_CORNER_VELOCITY=5
      {% endif %}

      {% for i in range(rep) %}
        ; Quadrado externo
        G1 X{pos_ext[0][0]} Y{pos_ext[0][1]} F{vel * 60}
        G1 X{pos_ext[1][0]} Y{pos_ext[1][1]} F{vel * 60}
        G1 X{pos_ext[2][0]} Y{pos_ext[2][1]} F{vel * 60}
        G1 X{pos_ext[3][0]} Y{pos_ext[3][1]} F{vel * 60}
        G1 X{pos_ext[0][0]} Y{pos_ext[0][1]} F{vel * 60}
        G1 X270 Y270 F{vel * 60}
        G1 X10 Y270 F{vel * 60}
        G1 X270 Y10 F{vel * 60}
        G1 X10 Y10 F{vel * 60}

        ; Quadrado interno em cada canto
        {% for offset in offsets %}
          {% set ox = offset[0] %}
          {% set oy = offset[1] %}
          G1 X{ox + pos_int[0][0]} Y{oy + pos_int[0][1]} F{vel * 60}
          G1 X{ox + pos_int[1][0]} Y{oy + pos_int[1][1]} F{vel * 60}
          G1 X{ox + pos_int[2][0]} Y{oy + pos_int[2][1]} F{vel * 60}
          G1 X{ox + pos_int[3][0]} Y{oy + pos_int[3][1]} F{vel * 60}
          G1 X{ox + pos_int[0][0]} Y{oy + pos_int[0][1]} F{vel * 60}
          G1 X{ox + 100} Y{oy + 100} F{vel * 60}
          G1 X{ox + 0}   Y{oy + 100} F{vel * 60}
          G1 X{ox + 100} Y{oy + 0}   F{vel * 60}
          G1 X{ox + 0}   Y{oy + 0}   F{vel * 60}
        {% endfor %}
      {% endfor %}

      G4 P2000
    {% endfor %}

    M117 Teste finalizado
    SET_LED LED=leds RED=0.0 GREEN=0.0 BLUE=0.0


[gcode_macro Z_CALIBRATE]
description: Calibra o Z Offset no centro da cama
gcode:
    # 1. Aquecer cama e bico se desejar (opcional)
    M117 Aquecendo cama e bico...
    M140 S70                        ; Alvo de temperatura da cama
    M104 S155                      ; Temperatura segura para o bico
    M190 S70
    M109 S155

    # 2. Home completo
    M117 Fazendo homing...
    G28

    # 3. Mover para o centro da cama
    M117 Movendo para centro da cama...
    G90
    G1 Z10 F600
    G1 X{(printer.toolhead.axis_maximum.x + printer.toolhead.axis_minimum.x) / 2} \
       Y{(printer.toolhead.axis_maximum.y + printer.toolhead.axis_minimum.y) / 2} F6000

    # 4. Iniciar calibra√ß√£o
    M117 Iniciando calibra√ß√£o do Z...
    PROBE_CALIBRATE

[gcode_macro CANCEL_PRINT]
description: "Macro personalizada para cancelar a impress√£o com recolhimento, resfriamento e movimenta√ß√£o segura"
gcode:
  # üîπ Desligar os aquecimentos
  TURN_OFF_HEATERS

  # üîπ Retrair filamento levemente
  G91                          ; modo relativo
  G1 E-2 F1800                 ; retrai 2 mm
  G90                          ; volta para modo absoluto

  # üîπ Afastar cabe√ßote e abaixar a mesa
  {% set max_z = printer.toolhead.axis_maximum.z|default(0)|float %}
  {% set current_z = printer.toolhead.position.z|default(0)|float %}
  {% set new_z = current_z + 50.0 %}
  {% set safe_z = new_z if new_z < max_z else max_z %}

  G91                          ; modo relativo
  G1 Z10 F600                  ; sobe 10 mm para evitar colis√£o antes do movimento XY
  G90                          ; modo absoluto
  G1 X0 Y120 F6000             ; move o cabe√ßote para frente/direita (ajuste se quiser outro local)
  G1 Z{safe_z} F1000           ; abaixa a mesa at√© 50 mm abaixo ou at√© o limite da Z
  G91                          ; modo relativo
  G1 Z-10 F600                 ; volta 10 mm se necess√°rio
  G90                          ; volta para absoluto

  # üîπ Desliga fans
  M106 S0

  # üîπ Mensagem opcional
  RESPOND PREFIX="Cancelamento" MSG="Impress√£o cancelada com seguran√ßa."

  # üîπ Comando original de cancelamento
  CANCEL_PRINT_BASE

[gcode_macro PID_CALIBRATE_HOTEND]
description: "Executa PID_CALIBRATE no hotend com temperatura definida"
variable_temp: 200
gcode:
    {% set target = params.TEMP|default(temp)|float %}
    {% set msg = "PID HOTEND %.0f" % target %}
    #SET_DISPLAY_MESSAGE MSG={msg}
    PID_CALIBRATE HEATER=extruder TARGET={target}

[gcode_macro PID_CALIBRATE_BED]
description: "Executa PID_CALIBRATE na mesa com temperatura definida"
variable_temp: 60
gcode:
    {% set target = params.TEMP|default(temp)|float %}
    {% set msg = "PID BED %.0f" % target %}
    #SET_DISPLAY_MESSAGE MSG={msg}
    PID_CALIBRATE HEATER=heater_bed TARGET={target}

[delayed_gcode _NEVERMORE_MONITOR]
initial_duration: 5
gcode:
    {% set temp = printer["temperature_sensor camara_temp"].temperature %}
    {% set fan_state = printer["output_pin nevermore_fan"].value|float %}
    {% set state = printer["gcode_macro NEVERMORE_CONTROL"].state %}

    {% if temp > 30 and fan_state < 0.9 %}
        SET_PIN PIN=nevermore_fan VALUE=1.0
        SET_GCODE_VARIABLE MACRO=NEVERMORE_CONTROL VARIABLE=state VALUE=True
        {% set msg = '"Ligando o Nevermore (temp=%.1f¬∞C)"' % temp %}
        RESPOND PREFIX="Nevermore" MSG={msg}

    {% elif temp < 28 and fan_state >= 0.5 %}
        SET_PIN PIN=nevermore_fan VALUE=0.0
        SET_GCODE_VARIABLE MACRO=NEVERMORE_CONTROL VARIABLE=state VALUE=False
        {% set msg = '"Desligando o Nevermore (temp=%.1f¬∞C)"' % temp %}
        RESPOND PREFIX="Nevermore" MSG={msg}
    {% endif %}

    UPDATE_DELAYED_GCODE ID=_NEVERMORE_MONITOR DURATION=10

[gcode_macro NEVERMORE_CONTROL]
variable_state: False
gcode:
    {% if state %}
        RESPOND MSG="Nevermore est√°: LIGADO"
    {% else %}
        RESPOND MSG="Nevermore est√°: DESLIGADO"
    {% endif %}
    
[gcode_macro NEVERMORE_ON]
gcode:
    SET_PIN PIN=nevermore_fan VALUE=1.0
    SET_GCODE_VARIABLE MACRO=NEVERMORE_CONTROL VARIABLE=state VALUE=True
    RESPOND MSG="Nevermore ligado"

[gcode_macro NEVERMORE_OFF]
gcode:
    SET_PIN PIN=nevermore_fan VALUE=0.0
    SET_GCODE_VARIABLE MACRO=NEVERMORE_CONTROL VARIABLE=state VALUE=False
    RESPOND MSG="Nevermore desligado"

[gcode_macro HOME_FRONTAL]
description: Aquece o bico at√© 230¬∞C, faz homing e move para o canto frontal direito
gcode:
    M117 Aquecendo o bico...
    #M104 S230                    ; Define a temperatura do bico
    #M109 S230                    ; Aguarda o bico atingir 230¬∞C

    M117 Fazendo homing...
    G28                          ; Faz homing de todos os eixos

    M117 Movendo para a frente direita...
    G90                          ; Usa coordenadas absolutas
    G1 Z40 F3000                 ; Sobe o Z para evitar colis√£o
    G1 X300 Y10 F6000            ; Move o cabe√ßote para frente/direita (ajuste conforme o tamanho da sua mesa)
    M117 Pronto!

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  LED_LARANJA
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set idle_timeout = client.idle_timeout|default(0) %}
  {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
  {% set restore = False if printer.toolhead.extruder == '' else True if params.RESTORE|default(1)|int == 1 else False %}
  {% set pos = printer.toolhead.position %}
  {% set resume_pos = '"%.3f,%.3f,%.3f"' % (pos[0], pos[1], pos[2]) %}

  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=resume_position VALUE={resume_pos}

  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"

  {% if idle_timeout > 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
    SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
  {% endif %}

  PAUSE_BASE
  {client.user_pause_macro|default("")}
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: {'restore': False, 'temp': 0}
variable_restore_idle_timeout: 0
variable_idle_state: False
variable_resume_position: ('0.0', '0.0', '0.0')
gcode:
  LED_BRANCO
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set sp_move = client.speed_move|default(velocity) %}
  {% set runout_resume = True if client.runout_sensor|default("") == ""     
                    else True if not printer[client.runout_sensor].enabled  
                    else printer[client.runout_sensor].filament_detected %}
  {% set can_extrude = True if printer.toolhead.extruder == ''           
                  else printer[printer.toolhead.extruder].can_extrude %}
  {% set do_resume = False %}
  {% set prompt_txt = [] %}

  {% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
    {% if last_extruder_temp.restore %}
      {% set msg = "Restoring %s temperature to %.1f¬∞C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) %}
      RESPOND TYPE=echo MSG="{msg}"
      M109 S{last_extruder_temp.temp}
      {% set do_resume = True %}
    {% elif can_extrude %}
      {% set do_resume = True %}
    {% else %}
      {% set error_msg = "Resume aborted: %s not hot enough. Heat and press RESUME." % printer.toolhead.extruder %}
      RESPOND TYPE=error MSG="{error_msg}"
      {% set _d = prompt_txt.append(error_msg) %}
    {% endif %}
  {% elif can_extrude %}
    {% set do_resume = True %}
  {% else %}
    {% set error_msg = "Resume aborted: %s not hot enough." % printer.toolhead.extruder %}
    RESPOND TYPE=error MSG="{error_msg}"
    {% set _d = prompt_txt.append(error_msg) %}
  {% endif %}

  {% if runout_resume %}
    {% if do_resume %}
      {% if restore_idle_timeout > 0 %}
        SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout}
      {% endif %}
      {client.user_resume_macro|default("")}
      #_CLIENT_EXTRUDE
      RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

      # Usa resume_position diretamente como tupla
      {% set x = resume_position[0]|float %}
      {% set y = resume_position[1]|float %}
      {% set z = resume_position[2]|float %}
      G90
      G1 X{x} Y{y} Z{z} F6000
    {% endif %}
  {% else %}
    {% set sensor_name = (client.runout_sensor.split(" "))[1] if " " in client.runout_sensor else client.runout_sensor %}
    {% set msg = "Resume aborted: %s detects no filament. Please load filament and press RESUME." % sensor_name %}
    RESPOND TYPE=error MSG="{msg}"
    {% set _d = prompt_txt.append(msg) %}
  {% endif %}

  {% if not (runout_resume and do_resume) %}
    RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
    {% for element in prompt_txt %}
      {% set prompt_line = "action:prompt_text %s" % element %}
      RESPOND TYPE=command MSG="{prompt_line}"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}

[gcode_macro LIMPAR_EIXO_Z]
description: Move o eixo Z entre 5 e 320 mm para lubrifica√ß√£o/limpeza, com n√∫mero de repeti√ß√µes definido
gcode:
    G90  ; Usa coordenadas absolutas

    {% set rep = params.REPETICOES|default(1)|int %}
    {% set z_min = 5 %}
    {% set z_max = 320 %}
    {% set msg = "Limpando eixo Z por " ~ rep|string ~ "x" %}

    M117 {msg}

    {% for i in range(rep) %}
      G1 Z{z_max} F2000
      G1 Z{z_min} F2000
    {% endfor %}

    M117 Limpeza do eixo Z finalizada

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Move o cabe√ßote para posi√ß√£o segura ao pausar
gcode:
    {% set z_atual = printer.toolhead.position.z %}
    {% set z_max = printer.toolhead.axis_maximum.z %}
    {% set z_alvo = z_atual + 50 %}
    {% if z_alvo <= z_max %}
        M400
        G91
        G1 Z50 F600           ; Sobe 50mm
        G90
    {% else %}
        M400
        G91
        G1 Z{z_max - z_atual} F600   ; Sobe at√© o limite dispon√≠vel
        G90
        {action_respond_info("Z limitado: subiu at√© o m√°ximo permitido")}
    {% endif %}
    G1 X290 Y10 F6000         ; Move para canto frente-direita

[gcode_macro PRINT_START]
description: "Inicia a impress√£o na SP5: aquece mesa, faz home, ajusta Z, aquece bico e extruda"
gcode:
    {% set file = printer["print_stats"].filename|default("")|upper %}
    {% set bed_temp = params.BED|default(60)|float %}
    {% set nozzle_temp = params.EXTRUDER|default(220)|float %}
    {% set is_abs_or_tritan = "ABS" in file or "TRITAN" in file %}

    M117 Aguardando Mesa Aquecer...
    RESPOND TYPE=command MSG="print_started"

    M140 S{bed_temp}
    LED_AQUECIMENTO_MESA_PROGRESSIVO
    M190 S{bed_temp}

    M117 Aquecendo bico a 155¬∞C...
    M104 S155
    M109 S155

    M117 Mesa Aquecida! Fazendo Home...
    G28

    M117 Ajustando Z...
    Z_TILT_ADJUST

    M117 Calibrando a mesa...
    BED_MESH_CALIBRATE ADAPTIVE=1

    M117 Aquecendo o Hotend...
    M104 S{nozzle_temp}
    M109 S{nozzle_temp}

    {% if is_abs_or_tritan %}
      M117 Ligando Nevermore...
      NEVERMORE_ON
    {% endif %}

    {% set final_msg = '"Bico a %.0f¬∞C! Iniciando impress√£o..."' % nozzle_temp %}
    M117 {final_msg}

    G90
    G92 E0

    CLEAN_AND_PURGE

    G1 E-0.8 F300
    G92 E0

    M117 Impress√£o Iniciada!
    LED_BRANCO


[gcode_macro CLEAN_AND_PURGE]
description: Limpa o bico na frente esquerda e inicia a linha de purga generosa
gcode:
    M117 Limpando bico e purgando...

    G90                             ; Posi√ß√£o absoluta
    G1 Z10 F3000                    ; Sobe para seguran√ßa
    G1 X5 Y5 F6000                  ; Vai para canto frontal esquerdo
    G1 Z0.3 F1000                   ; Abaixa perto da base para limpeza

    M83                             ; Modo extrus√£o relativa
    G1 E2.0 F250                    ; Extrus√£o para for√ßar sujeira sair

    ; Movimentos leves de raspagem na frente
    G91
    G1 X5 F800
    G1 X-10 F800
    G1 X5 F800
    G90

    G1 Z0.6 F1000                   ; Sobe um pouco

    ; Retra√ß√£o leve para n√£o escorrer no caminho at√© a purga
    G1 E-1.2 F300
    G92 E0

    ; Vai para a posi√ß√£o inicial da linha de purga
    G1 X5 Y10 Z0.3 F10000

    ; Executa a linha de purga
    G1 E1.2 F300                    ; Blob inicial
    G1 X20 E2.5 F1000
    G1 X40 E5.0 F1200
    G1 X60 E9.0 F1500

    G92 E0                          ; Zera extrusora
    G1 E-0.1 F300                   ; Retra√ß√£o leve
    G92 E0
    M82                             ; Volta para extrus√£o absoluta

    M117 Impress√£o iniciada!

[gcode_macro PROBE_SELFTEST]
description: Testa a ativa√ß√£o e resposta da Microprobe V2
gcode:
  M117 Iniciando autoteste da probe...
  SET_PIN PIN=probe_enable VALUE=1
  G4 P500
  QUERY_PROBE
  RESPOND TYPE=command MSG="Estado atual da probe (deve ser open): {printer.probe.query_result}"
  G4 P1500
  SET_PIN PIN=probe_enable VALUE=0
  M117 Teste conclu√≠do.

[gcode_macro TEST_PROBE]
description: Teste completo da Microprobe V2
gcode:
  M117 Testando PROBE...
  QUERY_PROBE
  RESPOND TYPE=command MSG="Probe deve estar em estado: open"
  G4 P1000

  M117 Ativando sonda...
  SET_PIN PIN=probe_enable VALUE=1
  G4 P500

  M117 Verifique toque manual ou aproxima√ß√£o da cama...
  QUERY_PROBE
  RESPOND TYPE=command MSG="Se tocou, probe deve estar: triggered"
  G4 P1000

  M117 Recolhendo sonda...
  SET_PIN PIN=probe_enable VALUE=0
  G4 P500

  M117 Teste da probe finalizado!
  
[gcode_macro TROCA_FILAMENTO]
description: Macro para troca de filamento manual
gcode:
  LED_LARANJA
  RESPOND TYPE=command MSG="filament_change"
  M117 Trocando filamento...

  PAUSE                         ; Isso chama _TOOLHEAD_PARK_PAUSE_CANCEL e j√° posiciona na frente
  
  M400                          ; Aguarda comandos anteriores
  G91
  G1 E-5 F300                   ; Retra√ß√£o curta
  G1 E-130 F1000                ; Retra√ß√£o longa - remove o filamento
  G90

[gcode_macro LAYER_NOTIFICATION]
description: "Exibe a camada atual no visor"
gcode:
    {% if printer.print_stats.info.current_layer is defined and printer.print_stats.info.total_layer is defined %}
        M117 Camada: {printer.print_stats.info.current_layer}/{printer.print_stats.info.total_layer}
    {% else %}
        M117 Camada: {printer.print_stats.info.current_layer}
    {% endif %}

[gcode_macro LOAD_FILAMENT]
description: "Verifica temperatura antes de carregar filamento"
variable_temperature: 200  # Temperatura padr√£o para carregar (pode ser alterada ao chamar o macro)
variable_extrude_length: 150  # Quantidade de filamento a ser extrudido (padr√£o 50mm)
gcode:
    {% set current_temp = printer.extruder.temperature %}
    
    {% if current_temp < temperature - 5 %}  # S√≥ aquece se estiver abaixo do necess√°rio
        M117 Aquece para carregar...
        M104 S{temperature}  ; Define a temperatura do hotend
        M109 S{temperature}  ; Aguarda atingir a temperatura
    {% else %}
        M117 Temperatura OK, carregando filamento...
    {% endif %}

    G92 E0                      ; Zera o extrusor
    G1 E10 F300                 ; Empurra 10mm devagar para iniciar o fluxo
    G1 E{extrude_length} F300    ; Carrega o filamento com extrus√£o maior
    M117 Filamento carregado

[gcode_macro UNLOAD_FILAMENT]
description: "Verifica temperatura e remove filamento"
variable_temperature: 200  # Temperatura alvo padr√£o
gcode:
    {% set current_temp = printer.extruder.temperature %}
    {% if current_temp < 180 %}
        M117 Aquece para retirada...
        M104 S{temperature}  ; Define a temperatura do hotend
        M109 S{temperature}  ; Aguarda atingir a temperatura
    {% else %}
        M117 Temperatura OK, retirando filamento...
    {% endif %}
    
    G91                  ; Define modo relativo
    G1 E-5 F300          ; Pequena retra√ß√£o inicial
    G1 E-150 F600         ; Retra√ß√£o longa para puxar o filamento
    M117 Filamento removido

[gcode_macro SAFE_Z_HOME]
description: "Homing + Auto Ajuste do Eixo Z"
gcode:
    G28 X Y  # Faz homing de X e Y primeiro
    G28 Z    # Faz homing do Z usando o BLTouch
    Z_TILT_ADJUST  # Alinha automaticamente os motores do eixo Z

#[gcode_macro BED_MESH_CALIBRATE_RUN]
#description: "Realiza o homing e calibra o bed mesh"
#gcode:
#    G28  # Faz o homing de todos os eixos
#    G1 Z10 F300  # Eleva o Z para evitar colis√µes antes da calibra√ß√£o
#    BED_MESH_CALIBRATE  # Inicia a calibra√ß√£o da malha
#    G28
#    SAVE_CONFIG  # Salva a malha no arquivo de configura√ß√£o

[gcode_macro END_PRINT]
description: "Finaliza a impress√£o na SP5, desce a mesa em at√© 50mm e faz homing de X/Y"
gcode:
    RESPOND TYPE=command MSG="print_done"

    {% set current_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = current_z + 50 %}
    {% if target_z > max_z %}
      {% set move_z = max_z - current_z %}
    {% else %}
      {% set move_z = 50 %}
    {% endif %}

    M400
    G91
    G1 E-5 F1800                     ; Retra√ß√£o para evitar escorrimento
    G28 X Y                          ; Faz home dos eixos X e Y
    G1 Z{move_z|float|round(2)} F300 ; Desce a mesa (sobe o bico)
    G90
    M104 S0                          ; Desliga hotend
    M140 S0                          ; Desliga a cama
    M107                             ; Desliga fan
    M84                              ; Desliga os motores
    NEVERMORE_OFF                    ; Desliga Nevermore
    M117 Impress√£o Finalizada!
    LED_ENDPRINT
    LED_OFF

